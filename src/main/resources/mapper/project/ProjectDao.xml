<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.projects.dao.ProjectDao">

    <select id="searchList" parameterType="Map" resultType="Map">
        select ems.id, ems.job_no jobNo,ems.name,ems.email,ems.phone,ems.department,ems.position,ems.line_type lineType,ems.director,
        (case when emzp.A3 is not null then emzp.A3 else 0 end) A3,(case when emzp.Blitz is not null then emzp.Blitz else 0 end) Blitz,
        (case when emzp.other is not null then emzp.other else 0 end) other,(case when emzp.count is not null then emzp.count else 0 end) count,
        (select count(*) from project_target pd where pd.job_no = ems.job_no)  target ,(select (count/target)) rate

        from employee ems left join

        (select  emp.job_no, sum(case when emp.project_type = 'A3' then 1 else 0 end) A3, sum( case when emp.project_type = 'Blitz' then 1 else 0 end) Blitz,sum( case when emp.project_type != 'Blitz' and emp.project_type != 'A3' then 1 else 0 end) other ,sum( case when emp.close_date is not null then 1 else 0 end) count
        from 	( select e.id, e.job_no,e.name,e.email,e.phone,e.department,e.position,e.line_type ,e.director,pj.project_type,pd.project_id,pd.hard_saving,pd.close_date  from employee e left join  project_detail pd on pd.member_email = e.email left join projects pj on pj.project_id = pd.project_id
        where  e.email != '' and e.active = 1 and e.position  != 'Operator I'  and  e.position  != 'Operator II' and  e.position  != 'Operator III'
        <if test=" state!= null and state != ''">
            and FIND_IN_SET(pj.state , #{state})
        </if>
        <if test=" start!= null and start != '' ">
            and case when 'Closed' = #{state} then pj.close_date >= #{start}
            when !FIND_IN_SET('Closed',#{state}) then pj.submit_date>=#{start}
            else (pj.close_date >= #{start} or pj.submit_date>=#{start})
            end
        </if>
        <if test=" end!= null and end != '' ">
            and case when 'Closed' = #{state} then pj.close_date &lt;= #{end}
            when !FIND_IN_SET('Closed',#{state}) then pj.submit_date &lt;=#{end}
            else (pj.close_date &lt;= #{end} or pj.submit_date &lt;= #{end})
            end
        </if>
        union
        select e.id,e.job_no,e.name,e.email,e.phone,e.department,e.position,e.line_type ,e.director,pj.project_type,pd.project_id,pd.hard_saving,pd.close_date  from employee e left join  project_detail pd on pd.nntid = e.job_no left join projects pj on pj.project_id = pd.project_id
        where  e.active = 1 and e.position  != 'Operator I'  and  e.position  != 'Operator II' and  e.position  != 'Operator III'
        <if test=" state!= null and state != ''">
            and FIND_IN_SET(pj.state , #{state})
        </if>
        <if test=" start!= null and start != '' ">
            and case when 'Closed' = #{state} then pj.close_date >= #{start}
            when !FIND_IN_SET('Closed',#{state}) then pj.submit_date>=#{start}
            else (pj.close_date >= #{start} or pj.submit_date>=#{start})
            end
        </if>
        <if test=" end!= null and end != '' ">
            and case when 'Closed' = #{state} then pj.close_date &lt;= #{end}
            when !FIND_IN_SET('Closed',#{state}) then pj.submit_date &lt;=#{end}
            else (pj.close_date &lt;= #{end} or pj.submit_date &lt;= #{end})
            end
        </if>
        ) emp GROUP BY  emp.job_no  ) emzp  on ems.job_no = emzp.job_no
        where ems.active = 1 and ems.position  != 'Operator I'  and  ems.position  != 'Operator II' and  ems.position  != 'Operator III'
        <if test=" jobNo!=null and jobNo != ''">
            and ems.job_no  like  CONCAT('',#{jobNo},'%')
        </if>
        <if test="name != null and name != ''">
            and  ems.name like CONCAT('%',#{name},'%')
        </if>
        <if test=" plantType!= null and plantType != ''">
            and  ems.plant_type = #{plantType}
        </if>
        <if test=" department!= null and department != ''">
            and  ems.department = #{department}
        </if>
        <if test=" position!= null and position != ''">
            and FIND_IN_SET( ems.position , #{position})
        </if>
        <if test=" costCategory!= null and costCategory != ''">
            and  ems.cost_category = #{costCategory}
        </if>
        <if test=" director!= null and director != ''">
            and  ems.director = #{director}
        </if>
        <if test=" lineType!= null and lineType != ''">
            and  FIND_IN_SET(ems.line_type , #{lineType})
        </if>
         order by ems.id asc  limit #{pageOffset},#{rows}
    </select>
    <select id="listAll" parameterType="Map" resultType="Map">
        select ems.id, ems.job_no jobNo,ems.name,ems.email,ems.phone,ems.department,ems.position,ems.line_type lineType,ems.director,
        (case when emzp.A3 is not null then emzp.A3 else 0 end) A3,(case when emzp.Blitz is not null then emzp.Blitz else 0 end) Blitz,
        (case when emzp.other is not null then emzp.other else 0 end) other,(case when emzp.count is not null then emzp.count else 0 end) count,
        (select count(*) from project_target pd where pd.job_no = ems.job_no)  target ,(select (count/target)) rate

        from employee ems left join

        (select  emp.job_no, sum(case when emp.project_type = 'A3' then 1 else 0 end) A3, sum( case when emp.project_type = 'Blitz' then 1 else 0 end) Blitz,sum( case when emp.project_type != 'Blitz' and emp.project_type != 'A3' then 1 else 0 end) other ,sum( case when emp.close_date is not null then 1 else 0 end) count
        from 	( select e.id, e.job_no,e.name,e.email,e.phone,e.department,e.position,e.line_type ,e.director,pj.project_type,pd.project_id,pd.hard_saving,pd.close_date  from employee e left join  project_detail pd on pd.member_email = e.email left join projects pj on pj.project_id = pd.project_id
        where  e.email != '' and e.active = 1 and e.position  != 'Operator I'  and  e.position  != 'Operator II' and  e.position  != 'Operator III'
        <if test=" state!= null and state != ''">
            and FIND_IN_SET(pj.state , #{state})
        </if>
        <if test=" start!= null and start != '' ">
            and case when 'Closed' = #{state} then pj.close_date >= #{start}
            when !FIND_IN_SET('Closed',#{state}) then pj.submit_date>=#{start}
            else (pj.close_date >= #{start} or pj.submit_date>=#{start})
            end
        </if>
        <if test=" end!= null and end != '' ">
            and case when 'Closed' = #{state} then pj.close_date &lt;= #{end}
            when !FIND_IN_SET('Closed',#{state}) then pj.submit_date &lt;=#{end}
            else (pj.close_date &lt;= #{end} or pj.submit_date &lt;= #{end})
            end
        </if>
        union
        select e.id,e.job_no,e.name,e.email,e.phone,e.department,e.position,e.line_type ,e.director,pj.project_type,pd.project_id,pd.hard_saving,pd.close_date  from employee e left join  project_detail pd on pd.nntid = e.job_no left join projects pj on pj.project_id = pd.project_id
        where  e.active = 1 and e.position  != 'Operator I'  and  e.position  != 'Operator II' and  e.position  != 'Operator III'
        <if test=" state!= null and state != ''">
            and FIND_IN_SET(pj.state , #{state})
        </if>
        <if test=" start!= null and start != '' ">
            and case when 'Closed' = #{state} then pj.close_date >= #{start}
            when !FIND_IN_SET('Closed',#{state}) then pj.submit_date>=#{start}
            else (pj.close_date >= #{start} or pj.submit_date>=#{start})
            end
        </if>
        <if test=" end!= null and end != '' ">
            and case when 'Closed' = #{state} then pj.close_date &lt;= #{end}
            when !FIND_IN_SET('Closed',#{state}) then pj.submit_date &lt;=#{end}
            else (pj.close_date &lt;= #{end} or pj.submit_date &lt;= #{end})
            end
        </if>
        ) emp GROUP BY  emp.job_no  ) emzp  on ems.job_no = emzp.job_no
        where ems.active = 1 and ems.position  != 'Operator I'  and  ems.position  != 'Operator II' and  ems.position  != 'Operator III'
        <if test=" jobNo!=null and jobNo != ''">
            and ems.job_no  like  CONCAT('',#{jobNo},'%')
        </if>
        <if test="name != null and name != ''">
            and  ems.name like CONCAT('%',#{name},'%')
        </if>
        <if test=" plantType!= null and plantType != ''">
            and  ems.plant_type = #{plantType}
        </if>
        <if test=" department!= null and department != ''">
            and  ems.department = #{department}
        </if>
        <if test=" position!= null and position != ''">
            and FIND_IN_SET( ems.position , #{position})
        </if>
        <if test=" costCategory!= null and costCategory != ''">
            and  ems.cost_category = #{costCategory}
        </if>
        <if test=" director!= null and director != ''">
            and  ems.director = #{director}
        </if>
        <if test=" lineType!= null and lineType != ''">
            and  FIND_IN_SET(ems.line_type , #{lineType})
        </if>
        order by ems.id asc
    </select>
    <select id="searchListCount" parameterType="Map" resultType="int">
        select count(*) from employee p  where active = 1 and p.position  != 'Operator I'  and  p.position  != 'Operator II' and  p.position  != 'Operator III'
        <if test=" jobNo!=null and jobNo != ''">
            and p.job_no  like  CONCAT('',#{jobNo},'%')
        </if>
        <if test="name != null and name != ''">
            and  p.name like CONCAT('%',#{name},'%')
        </if>
        <if test=" plantType!= null and plantType != ''">
            and  p.plant_type = #{plantType}
        </if>
        <if test=" department!= null and department != ''">
            and  p.department = #{department}
        </if>
        <if test=" position!= null and position != ''">
            and FIND_IN_SET( p.position , #{position})
        </if>
        <if test=" costCategory!= null and costCategory != ''">
            and  e.cost_category = #{costCategory}
        </if>
        <if test=" director!= null and director != ''">
            and  p.director = #{director}
        </if>
        <if test=" lineType!= null and lineType != ''">
            and  FIND_IN_SET(p.line_type , #{lineType})
        </if>
    </select>
    <select id="projectList" parameterType="Map" resultType="Map">
          select id,project_id projectId ,project_name projectName,project_type projectType,state ,lsc_date lscDate,submit_date submitDate,submit_email submitEmail,process_improve  processImprove,
            process_email processEmail,team_leader teamLeader,leader_email leaderEmail,team_member teamMember,member_email memberEmail,customer_field  customerField,close_date closeDate ,nntid,hard_saving hardSaving,impact_on_pl impacOn
            from projects p where 1=1
        <if test=" projectId!=null and projectId != ''">
            and p.project_id  like  CONCAT('',#{projectId},'%')
        </if>
        <if test="projectName != null and projectName != ''">
            and  p.project_name like CONCAT('%',#{projectName},'%')
        </if>
        <if test=" projectType!= null and projectType != ''">
            and  FIND_IN_SET(p.project_type , #{projectType})
        </if>
        <if test=" customerField!= null and customerField != ''">
            and  p.customer_field = #{customerField}
        </if>
        <if test=" processImprove != null and processImprove != ''">
            and  p.process_improve = #{processImprove}
        </if>
        <if test=" impactOn != null and impactOn != ''">
            and  FIND_IN_SET(p.impact_on_pl , #{impactOn})
        </if>
        <if test=" state!= null and state != ''">
            and  FIND_IN_SET(p.state , #{state})
        </if>
        <if test=" start!= null and start != '' ">
            and   case when 'Closed' = #{state} then  p.close_date >= #{start}
            when  !FIND_IN_SET('Closed',#{state}) then  p.submit_date>=#{start}
            else  (p.close_date >= #{start} or p.submit_date>=#{start})
            end
        </if>
        <if test=" end!= null and end != '' ">
            and   case when 'Closed' = #{state} then  p.close_date &lt;= #{end}
            when  !FIND_IN_SET('Closed',#{state}) then  p.submit_date &lt;=#{end}
            else  (p.close_date &lt;= #{end} or p.submit_date &lt;= #{end})
            end
        </if>
        order by
        <if test="state != null and state == 'Closed'">
           p.close_date
        </if>
        <if test="state == null or state == '' or state != 'Closed'">
            p.submit_date
        </if>
        desc  limit #{pageOffset},#{rows}
    </select>
    <select id="projectListCount" parameterType="Map" resultType="int">
        select count(*)
        from projects p where 1=1
        <if test=" projectId!=null and projectId != ''">
            and p.project_id  like  CONCAT('',#{projectId},'%')
        </if>
        <if test="projectName != null and projectName != ''">
            and  p.project_name like CONCAT('%',#{projectName},'%')
        </if>
        <if test=" projectType!= null and projectType != ''">
            and  FIND_IN_SET(p.project_type , #{projectType})
        </if>
        <if test=" customerField!= null and customerField != ''">
            and  p.customer_field = #{customerField}
        </if>
        <if test=" impactOn != null and impactOn != ''">
            and  FIND_IN_SET(p.impact_on_pl , #{impactOn})
        </if>
        <if test=" processImprove != null and processImprove != ''">
            and  p.process_improve = #{processImprove}
        </if>
        <if test=" state!= null and state != ''">
            and  FIND_IN_SET(p.state , #{state})
        </if>
        <if test=" start!= null and start != '' ">
            and   case when 'Closed' = #{state} then  p.close_date >= #{start}
            when  !FIND_IN_SET('Closed',#{state}) then  p.submit_date>=#{start}
            else  (p.close_date >= #{start} or p.submit_date>=#{start})
            end
        </if>
        <if test=" end!= null and end != '' ">
            and   case when 'Closed' = #{state} then  p.close_date &lt;= #{end}
            when  !FIND_IN_SET('Closed',#{state}) then  p.submit_date &lt;=#{end}
            else  (p.close_date &lt;= #{end} or p.submit_date &lt;= #{end})
            end
        </if>
    </select>
    <select id="getPj_id" resultType="Map">
        select id,project_id  projectId ,close_date closeDate from projects
    </select>

    <update id="updateTarget">
        update project_target pt left join
        (select  GROUP_CONCAT(pro.project_id) complete ,pro.member_email,pro.nntid,pro.cost_category,pro.job_no ,pro.close_date from
        ( select  psd.project_id ,psd.member_email,psd.nntid,ems.cost_category,ems.job_no,
        (case  when ems.cost_category = 'DL' then  date_format(psd.close_date,'%Y-%m-01')
        when ems.cost_category = 'IL' then date_format(date_sub(psd.close_date,INTERVAL WEEKDAY(psd.close_date) + 0 DAY),'%Y-%m-%d') else null end
        ) close_date
        from  project_detail psd left join employee ems on psd.member_email = ems.email or psd.nntid = ems.job_no
        where ems.email != '' and (psd.member_email !='' or  psd.nntid > 0) and  psd.close_date is not Null and (date_format(psd.close_date,'%Y-%m-%d') >= case when ems.cost_category ='DL' then date_format(date_sub(date_format(curdate(),'%Y-%m-01'),INTERVAL 2 MONTH),'%Y-%m-%d') else date_format(date_sub(curdate(),INTERVAL WEEKDAY(curdate()) + 28 DAY),'%Y-%m-%d') end  ) )pro
        group by pro.close_date,pro.job_no ,pro.nntid ) ptl on pt.job_no = ptl.job_no and pt.target_date = ptl.close_date set  pt.state = 1 ,pt.complet_project = ptl.complete where ptl.complete != ''
    </update>

    <update id="setTarget" >
        delete from project_target where target_date = (case when cost_category = 'DL'  then  date_format(curdate(),'%Y-%m-01')
        when cost_category = 'IL' then date_format(date_sub(curdate(),INTERVAL WEEKDAY(curdate()) + 0 DAY),'%Y-%m-%d') else null end) ;
        insert into project_target(job_no,cost_category,target_date,separtment)
        (select job_no,cost_category,(case when cost_category = 'DL' then  date_format(curdate(),'%Y-%m-01')
        when cost_category = 'IL' then date_format(date_sub(curdate(),INTERVAL WEEKDAY(curdate()) + 0 DAY),'%Y-%m-%d') else null end) target_date,separtment   from employee
        where  (cost_category = 'DL'or cost_category = 'IL') and position not like 'Operator%' and DATE_FORMAT(entry_date,'%Y-%m-%d') &lt; date_format(date_sub(curdate(),INTERVAL + 1 MONTH),'%Y-%m-%d') and active = 1) ;
    </update>

    <select id="queryStateRate" parameterType="Map" resultType="Map">
        select  state name ,count(*) value  from (select state from projects where 1=1
        <if test="start != null and start != ''">
            and submit_date >= #{start}
        </if>
        <if test="end != null and end != ''">
            and submit_date &lt;= #{end}
        </if>
        ) pd  GROUP BY state
    </select>
    <select id="moneyRate" parameterType="Map" resultType="Map">
        select job_no jobNo,name,SUM(hard_saving) value  from  (select sp.job_no ,sp.name,pd.hard_saving  from project_detail pd left join separtment sp on pd.separtment = sp.separtment
        <if test="start != null and start != ''">
            and pd.close_date >= #{start}
        </if>
        <if test="end != null and end != ''">
            and pd.close_date &lt;= #{end}
        </if>
        )zp GROUP BY job_no ,name having name != ''
    </select>
    <select id="impactRate" parameterType="Map" resultType="Map">
        select impact_on_pl name,sum(hard_saving) value
        from (select pj.impact_on_pl,pd.hard_saving,sep.name from  project_detail pd left join  projects pj on pd.project_id = pj.project_id left join separtment sep on pd.separtment = sep.separtment  where sep.name != ''
        <if test="start != null and start != ''">
            and pd.close_date >= #{start}
        </if>
        <if test="end != null and end != ''">
            and pd.close_date &lt;= #{end}
        </if>
        )  temp
        GROUP BY impact_on_pl
    </select>
    <select id="queryTypeRate" parameterType="Map" resultType="Map">
        select  project_type name ,count(*) value   from (select project_type from projects where 1=1
        <if test="start != null and start != ''">
        and submit_date >= #{start}
        </if>
        <if test="end != null and end != ''">
            and submit_date &lt;= #{end}
        </if>
        ) pd GROUP BY project_type
    </select>
    <select id="queryDCount" parameterType="Map" resultType="Map">
        select count(*) target,SUM(cont) num,job_no jobNo,name from  separtment lty left join (select  Get_StrArrayLength(complet_project,',') as cont ,separtment  from project_target pt where 1=1
        <if test="start != null and start != ''">
            and pt.target_date >= concat(#{start},'-01')
        </if>
        <if test="end != null and end != ''">
            and pt.target_date &lt;= date_format(last_day(concat(#{start},'-01')),'%Y-%m-%d')
        </if>
        and  pt.cost_category = #{costCategory})  cmpt on lty.separtment = cmpt.separtment group by lty.job_no ,name order by num desc
    </select>

    <select id="queryLCount" parameterType="Map" resultType="Map">
        select count(*) target,SUM(cont) num,job_no jobNo,name from  separtment lty left join (select  Get_StrArrayLength(complet_project,',') as cont ,separtment  from project_target pt where 1=1
        <if test="start != null and start != ''">
            and pt.target_date >= case when #{start} = date_format(date_sub(#{start},INTERVAL WEEKDAY(#{start}) - 5 DAY),'%Y-%m-%d') then #{start}  else  date_format(date_sub(#{start},INTERVAL WEEKDAY(#{start}) + 2 DAY),'%Y-%m-%d') end
        </if>
        <if test="end != null and end != ''">
            and pt.target_date &lt;= date_format(date_sub(#{end},INTERVAL WEEKDAY(#{end}) - 4 DAY),'%Y-%m-%d')
        </if>
         and  pt.cost_category = #{costCategory})  cmpt on lty.separtment = cmpt.separtment group by lty.job_no ,name order by num desc
    </select>

    <select id="queryTop" parameterType="Map" resultType="Map">
        select ems.job_no jobNo,ems.name,ems.director,Get_StrArrayLength(pt.complet_project,',') count from  project_target pt left join employee ems on pt.job_no = ems.job_no  where  ems.cost_category = #{costCategory}
        <if test="start != null and start != ''">
            and pt.target_date >= case when #{start} = date_format(date_sub(#{start},INTERVAL WEEKDAY(#{start}) - 5 DAY),'%Y-%m-%d') then #{start}  else  date_format(date_sub(#{start},INTERVAL WEEKDAY(#{start}) + 2 DAY),'%Y-%m-%d') end
        </if>
        <if test="end != null and end != ''">
            and pt.target_date &lt;= date_format(date_sub(#{end},INTERVAL WEEKDAY(#{end}) - 4 DAY),'%Y-%m-%d')
        </if>
        order by count desc limit 10
    </select>
    <select id="queryProject" parameterType="Map" resultType="Map">
        select em.job_no jobNo,em.email,em.name,em.director,em.department,em.position,em.line_type lineType,sp.project_id projectId,sp.project_name projectName ,sp.project_type projectType ,sp.state ,
         (case when sp.leader_email = em.email then  'leader' when FIND_IN_SET(em.job_no,sp.nntid) then 'NT'  else 'member' end)  role
        from employee em, (SELECT project_id,project_name,project_type, state,leader_email,concat(leader_email,',',member_email) emails,nntid FROM projects where project_id = #{projectId}) sp
        where  ((FIND_IN_SET(em.email, sp.emails)  or em.email = sp.leader_email) and em.email != '')  or  FIND_IN_SET(em.job_no,sp.nntid) order by  role desc
    </select>

    <select id="queryDTop" parameterType="Map" resultType="Map">
        select ems.job_no jobNo,ems.name,ems.director,Get_StrArrayLength(pt.complet_project,',') count from  project_target pt left join employee ems on pt.job_no = ems.job_no  where  ems.cost_category = #{costCategory}
        <if test="start != null and start != ''">
            and target_date >= concat(#{start},'-01')
        </if>
        <if test="end != null and end != ''">
        and target_date &lt;= date_format(last_day(concat(#{end},'-01')),'%Y-%m-%d')
        </if>
        order by count desc limit 10
    </select>
    <select id="empPeoMsg" parameterType="java.lang.String" resultType="Map">
         select name from employee  where job_no = #{jobNo}
    </select>
    <select id="empPeoList" parameterType="Map" resultType="Map">
        select pt.id,pt.project_id projectId ,pt.project_name projectName,pt.project_type projectType,pt.state ,pt.lsc_date lscDate,pt.submit_date submitDate,pt.submit_email submitEmail,pt.process_improve  processImprove,
            pt.process_email processEmail,pt.team_leader teamLeader,pt.leader_email leaderEmail,pt.team_member teamMember,pt.member_email memberEmail,pt.customer_field  customerField,pt.close_date closeDate ,pt.nntid,pt.hard_saving hardSaving
              from project_detail pd left join  projects pt on pd.project_id = pt.project_id , employee em  where em.job_no = #{jobNo}
         and (pd.nntid = em.job_no  or (em.email = pd.member_email and pd.member_email != ''))
        <if test=" state!= null and state != ''">
            and  FIND_IN_SET(pt.state , #{state})
        </if>
        <if test=" start!= null and start != '' ">
            and   case when 'Closed' = #{state} then  pt.close_date >= #{start}
            when  !FIND_IN_SET('Closed',#{state}) then  pt.submit_date>=#{start}
            else  (pt.close_date >= #{start} or pt.submit_date>=#{start})
            end
        </if>
        <if test=" end!= null and end != '' ">
            and   case when 'Closed' = #{state} then  pt.close_date &lt;= #{end}
            when  !FIND_IN_SET('Closed',#{state}) then  pt.submit_date &lt;=#{end}
            else  (pt.close_date &lt;= #{end} or pt.submit_date &lt;= #{end})
            end
        </if>
        order by pt.close_date desc   limit #{pageOffset},#{rows}
    </select>
    <select id="empPeoCount" parameterType="Map" resultType="int">
        select count(*) from project_detail pd left join  projects pt on pd.project_id = pt.project_id, employee em  where em.job_no = #{jobNo}
        and (pd.nntid = em.job_no  or (em.email = pd.member_email and pd.member_email != ''))
        <if test=" state!= null and state != ''">
            and  FIND_IN_SET(pt.state , #{state})
        </if>
        <if test=" start!= null and start != '' ">
            and   case when 'Closed' = #{state} then  pt.close_date >= #{start}
            when  !FIND_IN_SET('Closed',#{state}) then  pt.submit_date>=#{start}
            else  (pt.close_date >= #{start} or pt.submit_date>=#{start})
            end
        </if>
        <if test=" end!= null and end != '' ">
            and   case when 'Closed' = #{state} then  pt.close_date &lt;= #{end}
            when  !FIND_IN_SET('Closed',#{state}) then  pt.submit_date &lt;=#{end}
            else  (pt.close_date &lt;= #{end} or pt.submit_date &lt;= #{end})
            end
        </if>
    </select>
    <select id="getProcess" parameterType="Map" resultType="Map">
        select process_improve processImprove from projects group by process_improve
    </select>
    <select id="exportCaseMsg" parameterType="Map" resultType="Map">
        select id,project_id projectId ,project_name projectName,project_type projectType,state ,lsc_date lscDate,submit_date submitDate,submit_email submitEmail,process_improve  processImprove,
        process_email processEmail,team_leader teamLeader,leader_email leaderEmail,team_member teamMember,member_email memberEmail,customer_field  customerField,close_date closeDate ,nntid,hard_saving hardSaving,impact_on_pl impacOn
        from projects p where 1=1
        <if test=" projectId!=null and projectId != ''">
            and p.project_id  like  CONCAT('',#{projectId},'%')
        </if>
        <if test="projectName != null and projectName != ''">
            and  p.project_name like CONCAT('%',#{projectName},'%')
        </if>
        <if test=" projectType!= null and projectType != ''">
            and  p.project_type = #{projectType}
        </if>
        <if test=" customerField!= null and customerField != ''">
            and  p.customer_field = #{customerField}
        </if>
        <if test=" processImprove != null and processImprove != ''">
            and  p.process_improve = #{processImprove}
        </if>
        <if test=" impactOn != null and impactOn != ''">
            and  FIND_IN_SET(p.impact_on_pl , #{impactOn})
        </if>
        <if test=" state!= null and state != ''">
            and  FIND_IN_SET(p.state , #{state})
        </if>
        <if test=" start!= null and start != '' ">
            and   case when 'Closed' = #{state} then  p.close_date >= #{start}
            when  !FIND_IN_SET('Closed',#{state}) then  p.submit_date>=#{start}
            else  (p.close_date >= #{start} or p.submit_date>=#{start})
            end
        </if>
        <if test=" end!= null and end != '' ">
            and   case when 'Closed' = #{state} then  p.close_date &lt;= #{end}
            when  !FIND_IN_SET('Closed',#{state}) then  p.submit_date &lt;=#{end}
            else  (p.close_date &lt;= #{end} or p.submit_date &lt;= #{end})
            end
        </if>
        order by
        <if test="state != null and state == 'Closed'">
            p.close_date
        </if>
        <if test="state == null or state == '' or state != 'Closed'">
            p.submit_date
        </if>
        desc
    </select>
</mapper>